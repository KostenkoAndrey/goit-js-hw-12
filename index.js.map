{"version":3,"file":"index.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["`use strict`\n\n\n\nexport function createMarkup(array) {\n    return array.map(({ webformatURL: smallPic, largeImageURL: largePic, tags: alt, likes = 0, views = 0, comments = \"\", downloads = 0 }) => {\n        return `\n            <div class=\"galleries\">\n                <div class=\"loader\" style=\"display: block;\"></div> \n                <a href=\"${largePic}\">\n                    <img src=\"${smallPic}\" alt=\"${alt}\" />\n                </a>\n                <div class=\"content\">\n                    <div><p>Likes</p><span>${likes}</span></div>\n                    <div><p>Views</p><span>${views}</span></div>\n                    <div><p>Comments</p><span>${comments}</span></div>\n                    <div><p>Downloads</p><span>${downloads}</span></div>\n                </div>\n            </div>`;\n    }).join(\"\");\n}\n\nexport function setupImageLoadHandlers(container) {\n    const images = container.querySelectorAll('.galleries img');\n    images.forEach((img) => {\n        const loader = img.parentElement.previousElementSibling; // Получаем loader\n        img.onload = () => {\n            loader.style.display = 'none'; // Скрываем индикатор загрузки при успешной загрузке\n        };\n        img.onerror = () => {\n            loader.style.display = 'none'; // Скрываем индикатор загрузки при ошибке загрузки\n        };\n    });\n}\n","`use strict`\n\nconst API_KEY = \"46815109-801c3b1dec2424a02adace61a\";\nconst BASE_URL = \"https://pixabay.com/api/\";\nexport function fetchData(textRow) {\n    const params = new URLSearchParams({\n        key: API_KEY,\n        q: textRow,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n    });\n\n    return fetch(`${BASE_URL}?${params}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return response.json();\n        });\n}","'use strict';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { createMarkup, setupImageLoadHandlers } from \"./js/render-functions\";\nimport { fetchData } from \"./js/pixabay-api\";\n\nconst form = document.querySelector(\".form\");\nconst container = document.querySelector(\".gallery\");\nlet lightbox = null;\n\nform.addEventListener(\"submit\", handleSearch);\n\nfunction handleSearch(event) {\n    event.preventDefault();\n    const { textRow } = event.target.elements;\n\n    if (textRow.value.trim() === \"\") {\n        iziToast.warning({\n            title: 'Caution',\n            message: \"The search field cannot be empty.\",\n            color: \"red\"\n        });\n        return;\n    }\n\n    fetchData(textRow.value)\n        .then(data => {\n            if (data.hits.length === 0) {\n                iziToast.warning({\n                    title: 'Caution',\n                    message: '\"Sorry, there are no images matching your search query. Please try again!\"',\n                    color: \"yellow\"\n                });\n            } else {\n                container.innerHTML = createMarkup(data.hits);\n                \n                setupImageLoadHandlers(container);\n\n                if (lightbox) {\n                    lightbox.refresh();\n                } else {\n                    lightbox = new SimpleLightbox('.gallery .galleries a', {\n                        captionsData: 'alt',\n                        captionDelay: 250,\n                    });\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Fetch error:', error); \n        });\n        \n    form.reset();\n}\n\n\n"],"names":["createMarkup","array","smallPic","largePic","alt","likes","views","comments","downloads","setupImageLoadHandlers","container","img","loader","API_KEY","BASE_URL","fetchData","textRow","params","response","form","lightbox","handleSearch","event","iziToast","data","SimpleLightbox","error"],"mappings":"6vBAIO,SAASA,EAAaC,EAAO,CAChC,OAAOA,EAAM,IAAI,CAAC,CAAE,aAAcC,EAAU,cAAeC,EAAU,KAAMC,EAAK,MAAAC,EAAQ,EAAG,MAAAC,EAAQ,EAAG,SAAAC,EAAW,GAAI,UAAAC,EAAY,KACtH;AAAA;AAAA;AAAA,2BAGYL,CAAQ;AAAA,gCACHD,CAAQ,UAAUE,CAAG;AAAA;AAAA;AAAA,6CAGRC,CAAK;AAAA,6CACLC,CAAK;AAAA,gDACFC,CAAQ;AAAA,iDACPC,CAAS;AAAA;AAAA,mBAGrD,EAAE,KAAK,EAAE,CACd,CAEO,SAASC,EAAuBC,EAAW,CAC/BA,EAAU,iBAAiB,gBAAgB,EACnD,QAASC,GAAQ,CACpB,MAAMC,EAASD,EAAI,cAAc,uBACjCA,EAAI,OAAS,IAAM,CACfC,EAAO,MAAM,QAAU,MACnC,EACQD,EAAI,QAAU,IAAM,CAChBC,EAAO,MAAM,QAAU,MACnC,CACA,CAAK,CACL,CC/BA,MAAMC,EAAU,qCACVC,EAAW,2BACV,SAASC,EAAUC,EAAS,CAC/B,MAAMC,EAAS,IAAI,gBAAgB,CAC/B,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,CAAK,EAED,OAAO,MAAM,GAAGF,CAAQ,IAAIG,CAAM,EAAE,EAC/B,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAM,6BAA6B,EAEjD,OAAOA,EAAS,MAC5B,CAAS,CACT,CCVA,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCT,EAAY,SAAS,cAAc,UAAU,EACnD,IAAIU,EAAW,KAEfD,EAAK,iBAAiB,SAAUE,CAAY,EAE5C,SAASA,EAAaC,EAAO,CACzBA,EAAM,eAAc,EACpB,KAAM,CAAE,QAAAN,CAAS,EAAGM,EAAM,OAAO,SAEjC,GAAIN,EAAQ,MAAM,KAAI,IAAO,GAAI,CAC7BO,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,oCACT,MAAO,KACnB,CAAS,EACD,MACH,CAEDR,EAAUC,EAAQ,KAAK,EAClB,KAAKQ,GAAQ,CACNA,EAAK,KAAK,SAAW,EACrBD,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,6EACT,MAAO,QAC3B,CAAiB,GAEDb,EAAU,UAAYV,EAAawB,EAAK,IAAI,EAE5Cf,EAAuBC,CAAS,EAE5BU,EACAA,EAAS,QAAO,EAEhBA,EAAW,IAAIK,EAAe,wBAAyB,CACnD,aAAc,MACd,aAAc,GACtC,CAAqB,EAGrB,CAAS,EACA,MAAMC,GAAS,CACZ,QAAQ,MAAM,eAAgBA,CAAK,CAC/C,CAAS,EAELP,EAAK,MAAK,CACd"}